{
	"id": 0,
	"name": "@rocketbase/vue-extra-decorators",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "EventBus",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 48,
					"name": "$attrs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 37,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 48,
						"name": "Vue.$attrs"
					}
				},
				{
					"id": 30,
					"name": "$children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 28,
							"character": 20
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 111,
							"name": "Vue"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 30,
						"name": "Vue.$children"
					}
				},
				{
					"id": 110,
					"name": "$createElement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 61,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "CreateElement"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 110,
						"name": "Vue.$createElement"
					}
				},
				{
					"id": 44,
					"name": "$data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 33,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Vue.$data"
					}
				},
				{
					"id": 59,
					"name": "$delete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 44,
							"character": 9
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"name": "delete"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Vue.$delete"
					}
				},
				{
					"id": 26,
					"name": "$el",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 24,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 26,
						"name": "Vue.$el"
					}
				},
				{
					"id": 43,
					"name": "$isServer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 32,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Vue.$isServer"
					}
				},
				{
					"id": 49,
					"name": "$listeners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 38,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Function"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function"
										}
									}
								]
							}
						],
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Vue.$listeners"
					}
				},
				{
					"id": 27,
					"name": "$options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 25,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 111,
								"name": "Vue"
							}
						],
						"name": "ComponentOptions"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 27,
						"name": "Vue.$options"
					}
				},
				{
					"id": 28,
					"name": "$parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 26,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"id": 111,
						"name": "Vue"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 28,
						"name": "Vue.$parent"
					}
				},
				{
					"id": 45,
					"name": "$props",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 34,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Vue.$props"
					}
				},
				{
					"id": 31,
					"name": "$refs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 29,
							"character": 16
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"indexSignature": [
								{
									"id": 33,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 34,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 111,
												"name": "Vue"
											},
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 111,
													"name": "Vue"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/vue/types/vue.d.ts",
									"line": 29,
									"character": 17
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 31,
						"name": "Vue.$refs"
					}
				},
				{
					"id": 29,
					"name": "$root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 27,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"id": 111,
						"name": "Vue"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 29,
						"name": "Vue.$root"
					}
				},
				{
					"id": 39,
					"name": "$scopedSlots",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 31,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"indexSignature": [
								{
									"id": 41,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 42,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "NormalizedScopedSlot"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/vue/types/vue.d.ts",
									"line": 31,
									"character": 24
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 39,
						"name": "Vue.$scopedSlots"
					}
				},
				{
					"id": 58,
					"name": "$set",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 43,
							"character": 6
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"name": "set"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Vue.$set"
					}
				},
				{
					"id": 35,
					"name": "$slots",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 30,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"indexSignature": [
								{
									"id": 37,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 38,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "VNode"
												}
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/vue/types/vue.d.ts",
									"line": 30,
									"character": 18
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Vue.$slots"
					}
				},
				{
					"id": 46,
					"name": "$ssrContext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 35,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 46,
						"name": "Vue.$ssrContext"
					}
				},
				{
					"id": 47,
					"name": "$vnode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 36,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "VNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 47,
						"name": "Vue.$vnode"
					}
				},
				{
					"id": 111,
					"name": "Vue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 128,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "VueConstructor"
					}
				},
				{
					"id": 56,
					"name": "$destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 57,
							"name": "$destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 56,
								"name": "Vue.$destroy"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 42,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "Vue.$destroy"
					}
				},
				{
					"id": 99,
					"name": "$emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 100,
							"name": "$emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 101,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 102,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 99,
								"name": "Vue.$emit"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 58,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 99,
						"name": "Vue.$emit"
					}
				},
				{
					"id": 54,
					"name": "$forceUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 55,
							"name": "$forceUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 54,
								"name": "Vue.$forceUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 41,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "Vue.$forceUpdate"
					}
				},
				{
					"id": 50,
					"name": "$mount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 51,
							"name": "$mount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 52,
									"name": "elementOrSelector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Element"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 53,
									"name": "hydrating",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "false"
											},
											{
												"type": "intrinsic",
												"name": "true"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 50,
								"name": "Vue.$mount"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 40,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 50,
						"name": "Vue.$mount"
					}
				},
				{
					"id": 103,
					"name": "$nextTick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 104,
							"name": "$nextTick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 105,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 106,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 107,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 108,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/vue/types/vue.d.ts",
													"line": 59,
													"character": 21
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 103,
								"name": "Vue.$nextTick"
							}
						},
						{
							"id": 109,
							"name": "$nextTick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 103,
								"name": "Vue.$nextTick"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 59,
							"character": 11
						},
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 60,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 103,
						"name": "Vue.$nextTick"
					}
				},
				{
					"id": 95,
					"name": "$off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 96,
							"name": "$off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 97,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 98,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 95,
								"name": "Vue.$off"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 57,
							"character": 6
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 95,
						"name": "Vue.$off"
					}
				},
				{
					"id": 87,
					"name": "$on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 88,
							"name": "$on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 89,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 90,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 87,
								"name": "Vue.$on"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 55,
							"character": 5
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 87,
						"name": "Vue.$on"
					}
				},
				{
					"id": 91,
					"name": "$once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 92,
							"name": "$once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 93,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 94,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 91,
								"name": "Vue.$once"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 56,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 91,
						"name": "Vue.$once"
					}
				},
				{
					"id": 60,
					"name": "$watch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 61,
							"name": "$watch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 62,
									"name": "expOrFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 63,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 64,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 66,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														},
														{
															"id": 67,
															"name": "n",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 68,
															"name": "o",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/vue/types/vue.d.ts",
													"line": 47,
													"character": 13
												}
											]
										}
									}
								},
								{
									"id": 69,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "WatchOptions"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 70,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 71,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/vue/types/vue.d.ts",
											"line": 49,
											"character": 4
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 60,
								"name": "Vue.$watch"
							}
						},
						{
							"id": 72,
							"name": "$watch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"typeParameter": [
								{
									"id": 73,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 74,
									"name": "expOrFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 75,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 76,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 77,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/vue/types/vue.d.ts",
													"line": 51,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 78,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 79,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 80,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 81,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "this"
															}
														},
														{
															"id": 82,
															"name": "n",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 83,
															"name": "o",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/vue/types/vue.d.ts",
													"line": 52,
													"character": 13
												}
											]
										}
									}
								},
								{
									"id": 84,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "WatchOptions"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 85,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 86,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/vue/types/vue.d.ts",
											"line": 54,
											"character": 4
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 60,
								"name": "Vue.$watch"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 45,
							"character": 8
						},
						{
							"fileName": "node_modules/vue/types/vue.d.ts",
							"line": 50,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Vue.$watch"
					}
				},
				{
					"id": 2,
					"name": "On",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3,
							"name": "On",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 4,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "TFunction"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								],
								"name": "TypedPropertyDecorator"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 299,
							"character": 6
						}
					]
				},
				{
					"id": 20,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 21,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 22,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 111,
										"name": "Vue"
									}
								},
								{
									"id": 23,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 24,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 111,
								"name": "Vue"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 303,
							"character": 8
						}
					]
				},
				{
					"id": 10,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 11,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 12,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 111,
										"name": "Vue"
									}
								},
								{
									"id": 13,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 14,
									"name": "handler",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "AnyFunction"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 111,
								"name": "Vue"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 301,
							"character": 7
						}
					]
				},
				{
					"id": 5,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 6,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 7,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 111,
										"name": "Vue"
									}
								},
								{
									"id": 8,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 9,
									"name": "handler",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "AnyFunction"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 111,
								"name": "Vue"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 300,
							"character": 6
						}
					]
				},
				{
					"id": 15,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 16,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 17,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 111,
										"name": "Vue"
									}
								},
								{
									"id": 18,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 19,
									"name": "handler",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "AnyFunction"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 111,
								"name": "Vue"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 302,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						48,
						30,
						110,
						44,
						59,
						26,
						43,
						49,
						27,
						28,
						45,
						31,
						29,
						39,
						58,
						35,
						46,
						47,
						111
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						56,
						99,
						54,
						50,
						103,
						95,
						87,
						91,
						60,
						2,
						20,
						10,
						5,
						15
					]
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 298,
					"character": 22
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "intrinsic",
							"name": "object"
						},
						{
							"type": "reflection",
							"declaration": {
								"id": 25,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								}
							}
						},
						{
							"type": "reference",
							"id": 111,
							"typeArguments": [
								{
									"type": "unknown",
									"name": "this"
								}
							],
							"name": "Vue"
						}
					]
				}
			]
		},
		{
			"id": 112,
			"name": "BusFactory",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 113,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 114,
							"name": "instance",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "EventBus"
					}
				}
			],
			"children": [
				{
					"id": 115,
					"name": "On",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 116,
							"name": "On",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 117,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "AnyFunction"
									}
								],
								"name": "TypedPropertyDecorator"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 307,
							"character": 6
						}
					]
				},
				{
					"id": 130,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 131,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 132,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 133,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "EventBus"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 311,
							"character": 8
						}
					]
				},
				{
					"id": 126,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 127,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 128,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 129,
									"name": "handler",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "AnyFunction"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "EventBus"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 310,
							"character": 7
						}
					]
				},
				{
					"id": 118,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 119,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 120,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 121,
									"name": "handler",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "AnyFunction"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "EventBus"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 308,
							"character": 6
						}
					]
				},
				{
					"id": 122,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 123,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 124,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 125,
									"name": "handler",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "AnyFunction"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "EventBus"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 309,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						115,
						130,
						126,
						118,
						122
					]
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 305,
					"character": 20
				}
			]
		},
		{
			"id": 155,
			"name": "DataOpts",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"comment": {
				"shortText": "Parameters of the {@link Data | @Data} decorator and its flavors"
			},
			"typeParameter": [
				{
					"id": 156,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"children": [
				{
					"id": 157,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A default value or a function constructing a default value.\nArrays or objects are supported, if you want to use a literal\nfunction as a default value, use literal instead."
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 1756,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "typeParameter",
								"name": "T"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								],
								"name": "TFunction"
							}
						]
					}
				},
				{
					"id": 158,
					"name": "literal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A default value. If a function is given, it will be passed as a\nliteral value instead of being executed as a factory."
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 1762,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 156,
						"name": "T"
					}
				},
				{
					"id": 159,
					"name": "sync",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of a vue property to sync this data property with.\nOn update to said property, the value of the decorated property\nwill be changed as well. on changes to the data property, an\n`update:PROPNAME` event will be emitted, where PROPNAME is the\nname of the property to sync with."
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 1770,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						157,
						158,
						159
					]
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1749,
					"character": 18
				}
			]
		},
		{
			"id": 160,
			"name": "RecordPropOpts",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"comment": {
				"shortText": "Parameters of the {@link Prop | @Prop} decorator and its flavors"
			},
			"typeParameter": [
				{
					"id": 161,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"children": [
				{
					"id": 163,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A default value or a function constructing a default value.\nArrays or objects are supported, if you want to use a literal\nfunction as a default value, use literal instead."
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 1831,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "typeParameter",
								"name": "T"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								],
								"name": "TFunction"
							}
						]
					}
				},
				{
					"id": 164,
					"name": "literal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A default value. If a function is given, it will be passed as a\nliteral value instead of being executed as a factory."
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 1837,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 161,
						"name": "T"
					}
				},
				{
					"id": 168,
					"name": "model",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Marks this property as a model property, if true is given, it\nwill use the event 'update:PROPNAME' as the binding trigger,\nwhere PROPNAME is the name of the decorated property. If a\nstring is given, it will be used in place of the event instead."
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 1861,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 165,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not the property is required."
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 1842,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 166,
					"name": "twoWay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not the property is a two way property."
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 1847,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 162,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The type of the property. Should be a constructor function or\nan array of constructor functions."
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 1824,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								],
								"name": "Constructor"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Constructor"
								}
							}
						]
					}
				},
				{
					"id": 167,
					"name": "validator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A validator function returning true if a given value is valid\nand false otherwise."
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 1853,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "typeParameter",
								"name": "T"
							}
						],
						"name": "SingleArgFunction"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						163,
						164,
						168,
						165,
						166,
						162,
						167
					]
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1818,
					"character": 24
				}
			]
		},
		{
			"id": 169,
			"name": "RouteParamOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 170,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"children": [
				{
					"id": 171,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 2211,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "typeParameter",
								"name": "T"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 172,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 173,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 174,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 111,
														"name": "Vue"
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"sources": [
										{
											"fileName": "dist/VueExtraDecorators.d.ts",
											"line": 2211,
											"character": 17
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 175,
					"name": "literal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 2212,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 170,
						"name": "T"
					}
				},
				{
					"id": 176,
					"name": "parser",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 2213,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 177,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 178,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 179,
													"name": "val",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 180,
					"name": "serializer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 2214,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 181,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 182,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 183,
													"name": "val",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 170,
														"name": "T"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						171,
						175,
						176,
						180
					]
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2210,
					"character": 27
				}
			]
		},
		{
			"id": 184,
			"name": "RouteQueryOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 185,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"children": [
				{
					"id": 186,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 2283,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "typeParameter",
								"name": "T"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 187,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 188,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 189,
													"name": "this",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 111,
														"name": "Vue"
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"sources": [
										{
											"fileName": "dist/VueExtraDecorators.d.ts",
											"line": 2283,
											"character": 17
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 190,
					"name": "literal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 2284,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 185,
						"name": "T"
					}
				},
				{
					"id": 191,
					"name": "parser",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 2285,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 192,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 193,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 194,
													"name": "val",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "null"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															}
														]
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 195,
					"name": "serializer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 2286,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 196,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 197,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 198,
													"name": "val",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 185,
														"name": "T"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "null"
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						186,
						190,
						191,
						195
					]
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2282,
					"character": 27
				}
			]
		},
		{
			"id": 199,
			"name": "SnowflakeFactory",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"comment": {
				"shortText": "A generator for {@link Snowflake | Snowflakes}"
			},
			"signatures": [
				{
					"id": 200,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A generator for {@link Snowflake | Snowflakes}"
					},
					"type": {
						"type": "reference",
						"id": 884,
						"name": "Snowflake"
					}
				}
			],
			"children": [
				{
					"id": 201,
					"name": "counter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 3167,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						201
					]
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 3165,
					"character": 26
				}
			]
		},
		{
			"id": 151,
			"name": "WatchOptionsWithProp",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 153,
					"name": "deep",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/options.d.ts",
							"line": 175,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 153,
						"name": "WatchOptions.deep"
					}
				},
				{
					"id": 154,
					"name": "immediate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/vue/types/options.d.ts",
							"line": 176,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 154,
						"name": "WatchOptions.immediate"
					}
				},
				{
					"id": 152,
					"name": "prop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 1529,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						153,
						154,
						152
					]
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1528,
					"character": 30
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "WatchOptions"
				}
			]
		},
		{
			"id": 535,
			"name": "AfterFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 536,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"name": "TFunction"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 755,
					"character": 18
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 537,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 538,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 539,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "TFunction"
												}
											}
										],
										"name": "ThisParameterType"
									}
								},
								{
									"id": 540,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 541,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 543,
													"name": "args",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 757,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T",
																"constraint": {
																	"type": "reference",
																	"name": "TFunction"
																}
															}
														],
														"name": "Parameters"
													}
												},
												{
													"id": 544,
													"name": "context",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 758,
															"character": 11
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T",
																"constraint": {
																	"type": "reference",
																	"name": "TFunction"
																}
															}
														],
														"name": "ThisParameterType"
													}
												},
												{
													"id": 542,
													"name": "result",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 756,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T",
																"constraint": {
																	"type": "reference",
																	"name": "TFunction"
																}
															}
														],
														"name": "ReturnType"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														543,
														544,
														542
													]
												}
											],
											"sources": [
												{
													"fileName": "dist/VueExtraDecorators.d.ts",
													"line": 755,
													"character": 78
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 755,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 526,
			"name": "BeforeFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 527,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"name": "TFunction"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 751,
					"character": 19
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 528,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 529,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 530,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "TFunction"
												}
											}
										],
										"name": "ThisParameterType"
									}
								},
								{
									"id": 531,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 532,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 533,
													"name": "args",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 752,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T",
																"constraint": {
																	"type": "reference",
																	"name": "TFunction"
																}
															}
														],
														"name": "Parameters"
													}
												},
												{
													"id": 534,
													"name": "context",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 753,
															"character": 11
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T",
																"constraint": {
																	"type": "reference",
																	"name": "TFunction"
																}
															}
														],
														"name": "ThisParameterType"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														533,
														534
													]
												}
											],
											"sources": [
												{
													"fileName": "dist/VueExtraDecorators.d.ts",
													"line": 751,
													"character": 79
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 751,
							"character": 42
						}
					]
				}
			}
		},
		{
			"id": 507,
			"name": "ParamsTransformFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 508,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"name": "TFunction"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 742,
					"character": 28
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 509,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 510,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 511,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "TFunction"
												}
											}
										],
										"name": "ThisParameterType"
									}
								},
								{
									"id": 512,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 513,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 514,
													"name": "args",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 743,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T",
																"constraint": {
																	"type": "reference",
																	"name": "TFunction"
																}
															}
														],
														"name": "Parameters"
													}
												},
												{
													"id": 515,
													"name": "context",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 744,
															"character": 11
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T",
																"constraint": {
																	"type": "reference",
																	"name": "TFunction"
																}
															}
														],
														"name": "ThisParameterType"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														514,
														515
													]
												}
											],
											"sources": [
												{
													"fileName": "dist/VueExtraDecorators.d.ts",
													"line": 742,
													"character": 88
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 742,
							"character": 51
						}
					]
				}
			}
		},
		{
			"id": 727,
			"name": "PropOpts",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"comment": {
				"shortText": "Parameters of the {@link Prop | @Prop} decorator and its flavors"
			},
			"typeParameter": [
				{
					"id": 728,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1870,
					"character": 13
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							}
						],
						"name": "Constructor"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "Constructor"
						}
					},
					{
						"type": "reference",
						"id": 160,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							}
						],
						"name": "RecordPropOpts"
					}
				]
			}
		},
		{
			"id": 516,
			"name": "ResultTransformFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 517,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"name": "TFunction"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 746,
					"character": 28
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 518,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 519,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 520,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "TFunction"
												}
											}
										],
										"name": "ThisParameterType"
									}
								},
								{
									"id": 521,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 522,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 524,
													"name": "args",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 748,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T",
																"constraint": {
																	"type": "reference",
																	"name": "TFunction"
																}
															}
														],
														"name": "Parameters"
													}
												},
												{
													"id": 525,
													"name": "context",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 749,
															"character": 11
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T",
																"constraint": {
																	"type": "reference",
																	"name": "TFunction"
																}
															}
														],
														"name": "ThisParameterType"
													}
												},
												{
													"id": 523,
													"name": "result",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 747,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T",
																"constraint": {
																	"type": "reference",
																	"name": "TFunction"
																}
															}
														],
														"name": "ReturnType"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														524,
														525,
														523
													]
												}
											],
											"sources": [
												{
													"fileName": "dist/VueExtraDecorators.d.ts",
													"line": 746,
													"character": 88
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "dist/VueExtraDecorators.d.ts",
							"line": 746,
							"character": 51
						}
					]
				}
			}
		},
		{
			"id": 364,
			"name": "RouteConfig",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"comment": {
				"shortText": "Configuration for a route, stripped down version of the actial config\nused in \"vue-router\".",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nAll options valid in the route config of vue-router except component\nare allowed and working.\n\n{@link RouteParam} {@link RouteQuery} {@link RouteName}"
					}
				]
			},
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 264,
					"character": 16
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 365,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 368,
									"name": "meta",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "dist/VueExtraDecorators.d.ts",
											"line": 267,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 366,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "dist/VueExtraDecorators.d.ts",
											"line": 265,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 367,
									"name": "path",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "dist/VueExtraDecorators.d.ts",
											"line": 266,
											"character": 8
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										368,
										366,
										367
									]
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 264,
									"character": 18
								}
							]
						}
					},
					{
						"type": "intrinsic",
						"name": "any"
					}
				]
			}
		},
		{
			"id": 884,
			"name": "Snowflake",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"comment": {
				"shortText": "A unique ID generated from the current time,\nan incrementing counter and some random elements."
			},
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 3155,
					"character": 14
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 885,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 886,
									"name": "snowflake",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "dist/VueExtraDecorators.d.ts",
											"line": 3156,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										886
									]
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 3155,
									"character": 25
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 582,
			"name": "WrapperFunction",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 583,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"name": "TFunction"
					}
				},
				{
					"id": 584,
					"name": "THIS",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							}
						],
						"name": "ThisParameterType"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 845,
					"character": 20
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"name": "TFunction"
								}
							}
						],
						"name": "ReturnType"
					},
					{
						"type": "tuple",
						"elements": [
							{
								"type": "reflection",
								"declaration": {
									"id": 585,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 586,
											"name": "args",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "dist/VueExtraDecorators.d.ts",
													"line": 846,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T",
														"constraint": {
															"type": "reference",
															"name": "TFunction"
														}
													}
												],
												"name": "Parameters"
											}
										},
										{
											"id": 587,
											"name": "orig",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "dist/VueExtraDecorators.d.ts",
													"line": 847,
													"character": 8
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "TFunction"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												586,
												587
											]
										}
									],
									"sources": [
										{
											"fileName": "dist/VueExtraDecorators.d.ts",
											"line": 845,
											"character": 117
										}
									]
								}
							}
						]
					},
					{
						"type": "typeParameter",
						"name": "THIS",
						"constraint": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							],
							"name": "ThisParameterType"
						}
					}
				],
				"name": "TFunction"
			}
		},
		{
			"id": 387,
			"name": "Bus",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 313,
					"character": 17
				}
			],
			"type": {
				"type": "reference",
				"id": 112,
				"name": "BusFactory"
			}
		},
		{
			"id": 887,
			"name": "snowflake",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isPublic": true,
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "A generator for {@link Snowflake | Snowflakes}"
			},
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 3176,
					"character": 23
				}
			],
			"type": {
				"type": "reference",
				"id": 199,
				"name": "SnowflakeFactory"
			}
		},
		{
			"id": 740,
			"name": "BProp",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 741,
					"name": "BProp",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Declares a Vue property.\nBoolean flavor of {@link Prop | @Prop} decorator",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThere are various preconfigured flavors of this decorator for different\ntypes already available:\n{@link SProp} {@link NProp} {@link DProp} {@link BProp}\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @BProp()                  private simpleFlag!: boolean;\n  @BProp({default: null})   private defaultsToNull!: null | boolean;\n  @BProp({default: false})  private defaultsToFalse!: boolean;\n  @BProp({model: \"change\"}) private modelValue!: boolean;\n```\n\n{@link SProp} {@link NProp} {@link DProp} {@link BProp} {@link Prop}"
							}
						]
					},
					"parameters": [
						{
							"id": 742,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The property options to pass to vue, it can either be\n a constructor function like String or Number, an array of constructor\n functions or a property object {@link RecordPropOpts}.\n If a property object is given, in addition to the normal vue options\n some additional values can be provided.\n"
							},
							"type": {
								"type": "reference",
								"id": 727,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "PropOpts"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2059,
					"character": 22
				}
			]
		},
		{
			"id": 766,
			"name": "Blocking",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 767,
					"name": "Blocking",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Marks a function as blocking, setting a {@link BusyState} while in execution and\nautomatically blocking other functions marked with {@Blocking},\nsupports both synchronous and asynchronous processes.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nCalling this method with an options object allows for parallel execution of otherwise conflicting\nprocesses. It also allows for global / shared processes.\nThe corresponding busy state, in case of parallel execution,\nwill only be false if ALL started processes have finished.\n"
							},
							{
								"tag": "example",
								"text": "\n```typescript\n@Component({})\nexport default class FooBar extends Vue {\n  @BusyState() private busy!: boolean;\n  @Blocking()\n  private async saveFoo() {\n    // ... Implementation\n  }\n  @Blocking()\n  private async resetFoo() {\n    // ... Implementation\n  }\n}\n```\n\n{@link BusyState}"
							}
						]
					},
					"parameters": [
						{
							"id": 768,
							"name": "id",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The id of the blocking process, if there are multiple non-conflicting processes.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				},
				{
					"id": 769,
					"name": "Blocking",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 770,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 771,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 774,
													"name": "global",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 2425,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 772,
													"name": "id",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 2423,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 773,
													"name": "parallel",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 2424,
															"character": 12
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														774,
														772,
														773
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2387,
					"character": 25
				},
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2422,
					"character": 25
				}
			]
		},
		{
			"id": 775,
			"name": "BusyState",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 776,
					"name": "BusyState",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Binds a busy state used by {@link Blocking} methods to a vue reactive variable.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nCalling this method with an options object allows for global / shared processes.\nThe busy state, in case of parallel execution,\nwill only be false if ALL started processes have finished.\n"
							},
							{
								"tag": "example",
								"text": "\n```typescript\n@Component({ template: `<div><span v-if=\"busy\">Loading...</span></div>` })\nexport default class FooBar extends Vue {\n  @BusyState() private busy!: boolean;\n  @Blocking()\n  private async saveFoo() {\n    // ... Implementation\n  }\n  @Blocking()\n  private async resetFoo() {\n    // ... Implementation\n  }\n}\n```\n\n{@link Blocking}"
							}
						]
					},
					"parameters": [
						{
							"id": 777,
							"name": "id",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The identifier of a block state, if multiple exist.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "TypedPropertyDecorator"
					}
				},
				{
					"id": 778,
					"name": "BusyState",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 779,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 780,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 781,
													"name": "global",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 2590,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 782,
													"name": "id",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "dist/VueExtraDecorators.d.ts",
															"line": 2591,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														781,
														782
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2560,
					"character": 26
				},
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2589,
					"character": 26
				}
			]
		},
		{
			"id": 610,
			"name": "Classes",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 611,
					"name": "Classes",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Prefixes a css classes getter keys with a given\nprefix and adds a css class to its body.\nsupports transforming object keys for conventional class names.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis Decorator should be used on class getters.\nThere are various favors of this decorator preconfigured for certain styles:\n{@link ClassesCamel} {@link ClassesKebap} {@link ClassesPascal} {@link ClassesSnake}\n"
							},
							{
								"tag": "example",
								"text": "\n```typescript\nconst lower = (str: string) => str.toLowerCase();\n@Component({ template: `<div :class=\"classes\">Hello World</div>` })\nclass MyVueComponent extends Vue {\n  @Classes(\"my-prefix\", \"--\", composeConverter(lower, lower))\n  private get classes() {\n    return {\n      alignLeft: true,\n      alignRight: false,\n      direction: \"left\"\n    }\n  }\n}\n```\nRenders:\n```HTML\n<div class=\"my-prefix my-prefix--alignleft my-prefix--directionleft\">Hello World</div>\n```\n\n{@link ClassesCamel} {@link ClassesKebap} {@link ClassesPascal} {@link ClassesSnake}"
							}
						]
					},
					"parameters": [
						{
							"id": 612,
							"name": "prefix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The class prefix to prefix object keys with.\n If none is given, it will default to the converted class name."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 613,
							"name": "infix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The infix to insert between prefix and key.\n By default this will be an empty string."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 614,
							"name": "converter",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The converter used to convert object keys with.\n By default it does nothing.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "tuple",
										"elements": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								],
								"name": "TFunction"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 615,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 616,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"typeParameter": [
										{
											"id": 617,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											}
										}
									],
									"parameters": [
										{
											"id": 618,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 619,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 620,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "CalculatedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 925,
									"character": 127
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 925,
					"character": 24
				}
			]
		},
		{
			"id": 629,
			"name": "ClassesCamel",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 630,
					"name": "ClassesCamel",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Camel case specific flavor of {@link Classes} decorator.\nPrefixes a css classes getter keys with a given\nprefix and adds a css class to its body.\ntransforms the class name to camelCase and all members to PascalCase.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis Decorator should be used on class getters.\nThere are various favors of this decorator preconfigured for certain styles:\n{@link ClassesCamel} {@link ClassesKebap} {@link ClassesPascal} {@link ClassesSnake}\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n@Component({ template: `<div :class=\"classes\">Hello World</div>` })\nclass MyVueComponent extends Vue {\n  @ClassesCamel()\n  private get classes() {\n    return {\n      alignLeft: true,\n      alignRight: false,\n      direction: \"left\"\n    }\n  }\n}\n```\nRenders:\n```HTML\n<div class=\"myVueComponent myVueComponentAlignLeft myVueComponentDirectionLeft\">Hello World</div>\n```\n\n{@link Classes} {@link ClassesCamel} {@link ClassesKebap} {@link ClassesPascal} {@link ClassesSnake}"
							}
						]
					},
					"parameters": [
						{
							"id": 631,
							"name": "prefix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The class prefix to prefix object keys with.\n If none is given, it will default to the converted class name."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 632,
							"name": "infix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The infix to insert between prefix and key.\n By default this will be an empty string.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 610,
									"name": "Classes"
								}
							}
						],
						"name": "ReturnType"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 981,
					"character": 29
				}
			]
		},
		{
			"id": 633,
			"name": "ClassesKebap",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 634,
					"name": "ClassesKebap",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Kebap case specific flavor of {@link Classes} decorator.\nPrefixes a css classes getter keys with a given\nprefix and adds a css class to its body.\ntransforms the class name and all members to kebap-case.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis Decorator should be used on class getters.\nThere are various favors of this decorator preconfigured for certain styles:\n{@link ClassesCamel} {@link ClassesKebap} {@link ClassesPascal} {@link ClassesSnake}\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n@Component({ template: `<div :class=\"classes\">Hello World</div>` })\nclass MyVueComponent extends Vue {\n  @ClassesKebap()\n  private get classes() {\n    return {\n      alignLeft: true,\n      alignRight: false,\n      direction: \"left\"\n    }\n  }\n}\n```\nRenders:\n```HTML\n<div class=\"my-vue-component my-vue-component--align-left my-vue-component--direction-left\">Hello World</div>\n```\n\n{@link Classes} {@link ClassesCamel} {@link ClassesKebap} {@link ClassesPascal} {@link ClassesSnake}"
							}
						]
					},
					"parameters": [
						{
							"id": 635,
							"name": "prefix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The class prefix to prefix object keys with.\n If none is given, it will default to the converted class name."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 636,
							"name": "infix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The infix to insert between prefix and key.\n By default this will be two dashes (`--`).\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 610,
									"name": "Classes"
								}
							}
						],
						"name": "ReturnType"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1021,
					"character": 29
				}
			]
		},
		{
			"id": 637,
			"name": "ClassesPascal",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 638,
					"name": "ClassesPascal",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Pascal case specific flavor of {@link Classes} decorator.\nPrefixes a css classes getter keys with a given\nprefix and adds a css class to its body.\ntransforms the class name and all members to PascalCase.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis Decorator should be used on class getters.\nThere are various favors of this decorator preconfigured for certain styles:\n{@link ClassesCamel} {@link ClassesKebap} {@link ClassesPascal} {@link ClassesSnake}\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n@Component({ template: `<div :class=\"classes\">Hello World</div>` })\nclass MyVueComponent extends Vue {\n  @ClassesPascal()\n  private get classes() {\n    return {\n      alignLeft: true,\n      alignRight: false,\n      direction: \"left\"\n    }\n  }\n}\n```\nRenders:\n```HTML\n<div class=\"MyVueComponent MyVueComponentAlignLeft MyVueComponentDirectionLeft\">Hello World</div>\n```\n\n{@link Classes} {@link ClassesCamel} {@link ClassesKebap} {@link ClassesPascal} {@link ClassesSnake}"
							}
						]
					},
					"parameters": [
						{
							"id": 639,
							"name": "prefix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The class prefix to prefix object keys with.\n If none is given, it will default to the converted class name."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 640,
							"name": "infix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The infix to insert between prefix and key.\n By default this will be an empty string.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 610,
									"name": "Classes"
								}
							}
						],
						"name": "ReturnType"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1061,
					"character": 30
				}
			]
		},
		{
			"id": 641,
			"name": "ClassesSnake",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 642,
					"name": "ClassesSnake",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Snake case specific flavor of {@link Classes} decorator.\nPrefixes a css classes getter keys with a given\nprefix and adds a css class to its body.\ntransforms the class name and all members to snake_case.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis Decorator should be used on class getters.\nThere are various favors of this decorator preconfigured for certain styles:\n{@link ClassesCamel} {@link ClassesKebap} {@link ClassesPascal} {@link ClassesSnake}\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n@Component({ template: `<div :class=\"classes\">Hello World</div>` })\nclass MyVueComponent extends Vue {\n  @ClassesSnake()\n  private get classes() {\n    return {\n      alignLeft: true,\n      alignRight: false,\n      direction: \"left\"\n    }\n  }\n}\n```\nRenders:\n```HTML\n<div class=\"my_vue_component my_vue_component--align_left my_vue_component--direction_left\">Hello World</div>\n```\n\n{@link Classes} {@link ClassesCamel} {@link ClassesKebap} {@link ClassesPascal} {@link ClassesSnake}"
							}
						]
					},
					"parameters": [
						{
							"id": 643,
							"name": "prefix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The class prefix to prefix object keys with.\n If none is given, it will default to the converted class name."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 644,
							"name": "infix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The infix to insert between prefix and key.\n By default this will be two dashes (`--`).\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 610,
									"name": "Classes"
								}
							}
						],
						"name": "ReturnType"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1101,
					"character": 29
				}
			]
		},
		{
			"id": 743,
			"name": "DProp",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 744,
					"name": "DProp",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Declares a Vue property.\nDate flavor of {@link Prop | @Prop} decorator",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThere are various preconfigured flavors of this decorator for different\ntypes already available:\n{@link SProp} {@link NProp} {@link DProp} {@link BProp}\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @DProp()                            private simpleDate!: Date;\n  @DProp({default: null})             private defaultsToNull!: null | Date;\n  @DProp({default: () => new Date()}) private defaultsToNow!: Date;\n  @DProp({model: \"change\"})           private modelValue!: Date;\n```\n\n{@link SProp} {@link NProp} {@link DProp} {@link BProp} {@link Prop}"
							}
						]
					},
					"parameters": [
						{
							"id": 745,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The property options to pass to vue, it can either be\n a constructor function like String or Number, an array of constructor\n functions or a property object {@link RecordPropOpts}.\n If a property object is given, in addition to the normal vue options\n some additional values can be provided.\n"
							},
							"type": {
								"type": "reference",
								"id": 727,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Date"
									}
								],
								"name": "PropOpts"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Date"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2111,
					"character": 22
				}
			]
		},
		{
			"id": 717,
			"name": "DWatch",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 718,
					"name": "DWatch",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Watch a property for changes, deeply",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis decorator is synonymous to using {@link Watch} with `deep` set to `true`.\nThere are also flavors for these uses: {@link Watch}, {@link IWatch}, {@link IDWatch}"
							},
							{
								"tag": "example",
								"text": "\n```typescript\n@Data({ default: {} }) private value!: any;\n@DWatch(\"value\")\nprivate onValueChange(newValue: any, oldValue: any) {\n  // ...Implementation\n}\n```\n{@link Watch}, {@link IWatch}, {@link DWatch}, {@link IDWatch}"
							}
						]
					},
					"parameters": [
						{
							"id": 719,
							"name": "property",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The property to watch"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1706,
					"character": 23
				}
			]
		},
		{
			"id": 723,
			"name": "Data",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 724,
					"name": "Data",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Declares a Vue data property.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThere are various preconfigured flavors of this decorator for different\ntypes already available:\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @Data()                    private defaultsToNull!: string | null;\n  @Data({default: 0})        private numberWithDefault!: number;\n  @Data({literal: parseInt}) private parser!: (str: string) => number;\n  @Data({sync: \"value\"})     private syncsWithPropertyValue!: string;\n  @SProp({default: \"\"})      private value!: string;\n```\n\n{@link SProp} {@link NProp} {@link DProp} {@link BProp} {@link Prop}"
							}
						]
					},
					"typeParameter": [
						{
							"id": 725,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 726,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The data property options.\n"
							},
							"type": {
								"type": "reference",
								"id": 155,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								],
								"name": "DataOpts"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1813,
					"character": 21
				}
			]
		},
		{
			"id": 803,
			"name": "Debounce",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 804,
					"name": "Debounce",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Debounce function calls by a specified amount of time\nThe function will only be executed `ms` milliseconds after\nthe last invocation. If it is invoked again within this\ntimeframe, the timeframe is reset. Useful for search completion.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want calls to execute the function immediately, then block\nsubsequent calls until a specific time is over, use\n{@link Debuffer} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @Debounce(1000)\n  onSearchLiveChange(ev: Event) {\n    // Only ever executed every 1000 ms, 1000 ms after last invocation\n  }\n```\n\nCall limiting decorators:\n{@link Debounce} {@link Debuffer} {@link LimitToFrames}\n\nDelaying decorators:\n{@link Delay} {@link NextFrame} {@link NextTick} {@link NextMs}\n\nInterval decorators:\n{@link Every} {@link EveryFrame}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 805,
							"name": "ms",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The amount of milliseconds to debounce it by\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 806,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 807,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 808,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 809,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 810,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AnyFunction"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "TFunction"
											}
										],
										"name": "TypedPropertyDescriptor"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 2896,
									"character": 39
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2896,
					"character": 25
				}
			]
		},
		{
			"id": 795,
			"name": "Debuffer",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 796,
					"name": "Debuffer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Debuffer function calls by a specified amount of time\nThe function will only be executed every `ms` milliseconds\nEvery call within this timeframe are blocked and the timeframe\nreset. Useful for possible multiple event triggersn.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want calls to execute the function after the specified time\nblock subsequent calls, use {@link Debounce} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @Debuffer(1000)\n  onSearchLiveChange(ev: Event) {\n    // Only ever executed every 1000 ms, immediately after first invocation\n  }\n```\n\nCall limiting decorators:\n{@link Debounce} {@link Debuffer} {@link LimitToFrames}\n\nDelaying decorators:\n{@link Delay} {@link NextFrame} {@link NextTick} {@link NextMs}\n\nInterval decorators:\n{@link Every} {@link EveryFrame}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 797,
							"name": "ms",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The amount of milliseconds to debuffer it by\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 798,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 799,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 800,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 801,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 802,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AnyFunction"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "TFunction"
											}
										],
										"name": "TypedPropertyDescriptor"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 2862,
									"character": 39
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2862,
					"character": 25
				}
			]
		},
		{
			"id": 811,
			"name": "Delay",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 812,
					"name": "Delay",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Delay function calls by a specified amount of time.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want to delay by one ms, a browser frame or a vue tick, look into\n{@link NextMs}, {@link NextFrame} or {@link NextTick} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @Delay(500)\n  delayed() {\n    // Executed 500 ms after invocation\n  }\n```\n\nCall limiting decorators:\n{@link Debounce} {@link Debuffer} {@link LimitToFrames}\n\nDelaying decorators:\n{@link Delay} {@link NextFrame} {@link NextTick} {@link NextMs}\n\nInterval decorators:\n{@link Every} {@link EveryFrame}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 813,
							"name": "ms",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The milliseconds to delay calls by.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 814,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 815,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 816,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 817,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 818,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AnyFunction"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 2926,
									"character": 36
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2926,
					"character": 22
				}
			]
		},
		{
			"id": 653,
			"name": "DocumentEl",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 654,
					"name": "DocumentEl",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Creates a computed property for {@link Document#querySelector} or {@link Document#querySelectorAll}",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nPreferably use {@link Ref}\n"
							},
							{
								"tag": "example",
								"text": "\n```html\n<html><body><div id=\"foo\"></div></body></html>\n```\n```typescript\n@Component({})\nexport default class FooBar extends Vue {\n  @DocumentEl(\"#foo\") private foo!: HTMLDivElement;\n}\n```\n\n{@link El} {@link DocumentEl} {@link ParentEl}"
							}
						]
					},
					"parameters": [
						{
							"id": 655,
							"name": "selector",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The css selector to pass to {@link Document#querySelector} or {@link Document#querySelectorAll}"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 656,
							"name": "multiple",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "If {@link Document#querySelectorAll} should be used\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1136,
					"character": 27
				}
			]
		},
		{
			"id": 657,
			"name": "El",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 658,
					"name": "El",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Creates a computed property for {@link Vue#$el#querySelector | this.$el.querySelector}\nor {@link Vue#$el#querySelectorAll | this.$el.querySelectorAll}",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nPreferably use {@link Ref}\n"
							},
							{
								"tag": "example",
								"text": "\n```typescript\n@Component({ template: `<div><div id=\"foo\"></div></div>` })\nexport default class FooBar extends Vue {\n  @El(\"#foo\") private foo!: HTMLDivElement;\n}\n```\n\n{@link El} {@link DocumentEl} {@link ParentEl}"
							}
						]
					},
					"parameters": [
						{
							"id": 659,
							"name": "selector",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The css selector to pass to\n{@link Vue#$el#querySelector | this.$el.querySelector} or {@link Vue#$el#querySelectorAll | this.$el.querySelectorAll}"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 660,
							"name": "multiple",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "If {@link Vue#$el#querySelectorAll | this.$el.querySelectorAll} should be used\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1159,
					"character": 19
				}
			]
		},
		{
			"id": 665,
			"name": "Emit",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 666,
					"name": "Emit",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Emits a given vue event after execution with the return value being the event parameter.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf a promise is returned, it will trigger the event after the promise has completed successfully.\nWill never emit on error, use {@link EmitError} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```typescript\n@Component({})\nexport default class FooBar extends Vue {\n  @Emit(\"save-success\")\n  private async saveFooBar() {\n    // ... Implementation\n    return { foobar: {} };\n  }\n}\n```\n\n{@link Emit} {@link EmitError} {@link EmitOnStatusCode}"
							}
						]
					},
					"parameters": [
						{
							"id": 667,
							"name": "event",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The name of the event to trigger, defaults to the method name\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 668,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 669,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 670,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 671,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 672,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 111,
																"name": "Vue"
															}
														],
														"name": "FunctionWithContext"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 1212,
									"character": 38
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1212,
					"character": 21
				}
			]
		},
		{
			"id": 673,
			"name": "EmitError",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 674,
					"name": "EmitError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Emits a given vue event after failed execution with the error being the event parameter.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf a promise is returned, it will trigger the event after the promise was rejected.\nWill never emit on success, use {@link Emit} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```typescript\n@Component({})\nexport default class FooBar extends Vue {\n  @EmitError(\"save-failure\")\n  private async saveFooBar() {\n    // ... Implementation\n    throw new Error(\"Error trying to save foobar\");\n  }\n}\n```\n\n{@link Emit} {@link EmitError} {@link EmitOnStatusCode}"
							}
						]
					},
					"parameters": [
						{
							"id": 675,
							"name": "event",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The name of the event to trigger, defaults to `error:METHODNAME`\nwhere METHODNAME is the name of the decorated method."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 676,
							"name": "rethrow",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "If the error should be re-thrown after emitting the event\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 677,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 678,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 679,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 680,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 681,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 111,
																"name": "Vue"
															}
														],
														"name": "FunctionWithContext"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 1240,
									"character": 62
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1240,
					"character": 26
				}
			]
		},
		{
			"id": 682,
			"name": "EmitOnStatusCode",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 683,
					"name": "EmitOnStatusCode",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Emits a given vue event after the execution of the decorated method,\nif a status code can be extracted from its return value or error.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf a promise is returned, it will trigger the event after the promise was rejected or resolved.\n"
							},
							{
								"tag": "example",
								"text": "\n```typescript\n@Component({})\nexport default class FooBar extends Vue {\n  @EmitOnStatusCode(200, \"success\")\n  @EmitOnStatusCode([400, 500], \"failure\")\n  private async saveFooBar() {\n    // ... Implementation\n    return axios.get(\"/foo/bar\");\n  }\n}\n```\n\n{@link Emit} {@link EmitError} {@link EmitOnStatusCode}"
							}
						]
					},
					"parameters": [
						{
							"id": 684,
							"name": "code",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The status code to match, if none is given, it will emit on every status code"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 685,
							"name": "event",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The name of the event to trigger, defaults to `status:STATUSCODE`\nwhere STATUSCODE is the status code extracted from the return value or error of the decorated method."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 686,
							"name": "rethrow",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "If the error should be re-thrown after emitting the event\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 111,
										"name": "Vue"
									}
								],
								"name": "FunctionWithContext"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				},
				{
					"id": 687,
					"name": "EmitOnStatusCode",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 688,
							"name": "codes",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 689,
							"name": "event",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 690,
							"name": "rethrow",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 111,
										"name": "Vue"
									}
								],
								"name": "FunctionWithContext"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1270,
					"character": 33
				},
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1299,
					"character": 33
				}
			]
		},
		{
			"id": 819,
			"name": "Every",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 820,
					"name": "Every",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Calls a function every `ms` milliseconds.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want to execute on every animation frame, use\n{@link EveryFrame} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @Every(1000)\n  updateCountdown() {\n    // Executed every 1000 ms\n    this.date = new Date();\n  }\n```\n\nCall limiting decorators:\n{@link Debounce} {@link Debuffer} {@link LimitToFrames}\n\nDelaying decorators:\n{@link Delay} {@link NextFrame} {@link NextTick} {@link NextMs}\n\nInterval decorators:\n{@link Every} {@link EveryFrame}\n"
							}
						]
					},
					"parameters": [
						{
							"id": 821,
							"name": "ms",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The milliseconds between executions\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 822,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 823,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 824,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 825,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 826,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AnyFunction"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 2957,
									"character": 36
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2957,
					"character": 22
				}
			]
		},
		{
			"id": 827,
			"name": "EveryFrame",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 828,
					"name": "EveryFrame",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Calls a function every animation frame.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want to execute in a specific interval, use\n{@link Every} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @EveryFrame()\n  render() {\n    // on every animation frame\n  }\n```\n\nCall limiting decorators:\n{@link Debounce} {@link Debuffer} {@link LimitToFrames}\n\nDelaying decorators:\n{@link Delay} {@link NextFrame} {@link NextTick} {@link NextMs}\n\nInterval decorators:\n{@link Every} {@link EveryFrame}\n"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 829,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 830,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 831,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 832,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 833,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AnyFunction"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 2986,
									"character": 30
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2986,
					"character": 27
				}
			]
		},
		{
			"id": 720,
			"name": "IDWatch",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 721,
					"name": "IDWatch",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Watch a property for changes, deeply and immediately",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis decorator is synonymous to using {@link Watch} with `deep`\nand `immediate` set to `true`.\nThere are also flavors for these uses: {@link Watch}, {@link IWatch}, {@link DWatch}"
							},
							{
								"tag": "example",
								"text": "\n```typescript\n@Data({ default: {} }) private value!: any;\n@IDWatch(\"value\")\nprivate onValueChange(newValue: any, oldValue: any) {\n  // ...Implementation\n}\n```\n{@link Watch}, {@link IWatch}, {@link DWatch}, {@link IDWatch}"
							}
						]
					},
					"parameters": [
						{
							"id": 722,
							"name": "property",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The property to watch"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1744,
					"character": 24
				}
			]
		},
		{
			"id": 714,
			"name": "IWatch",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 715,
					"name": "IWatch",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Watch a property for changes, immediately",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis decorator is synonymous to using {@link Watch} with `immediate` set to `true`.\nThere are also flavors for these uses: {@link Watch}, {@link DWatch}, {@link IDWatch}"
							},
							{
								"tag": "example",
								"text": "\n```typescript\n@Data({ default: \"\" }) private value!: string;\n@IWatch(\"value\")\nprivate onValueChange(newValue: string, oldValue: string) {\n  // ...Implementation\n}\n```\n{@link Watch}, {@link IWatch}, {@link DWatch}, {@link IDWatch}"
							}
						]
					},
					"parameters": [
						{
							"id": 716,
							"name": "property",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The property to watch"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1670,
					"character": 23
				}
			]
		},
		{
			"id": 476,
			"name": "If",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 477,
					"name": "If",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Wraps a function and only calls through if a given set of predicates return truthy",
						"tags": [
							{
								"tag": "remarks",
								"text": ""
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(wasPrevented)\n  private doSomething(ev: Event) {\n    // only executed if wasPrevented returns true\n  }\n```\n{@link IfNot} {@link or} {@link and} {@link not}"
							}
						]
					},
					"parameters": [
						{
							"id": 478,
							"name": "fns",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The predicates to check before executing the decorated function\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "boolean"
										}
									],
									"name": "TFunction"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 479,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 480,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 481,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 482,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 483,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TFunction"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 668,
									"character": 50
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 668,
					"character": 19
				}
			]
		},
		{
			"id": 484,
			"name": "IfNot",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 485,
					"name": "IfNot",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Wraps a function and only calls through if a given set of predicates return falsy",
						"tags": [
							{
								"tag": "remarks",
								"text": ""
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @IfNot(wasPrevented)\n  private doSomething(ev: Event) {\n    // only executed if wasPrevented returns false\n  }\n```\n{@link If} {@link or} {@link and} {@link not}"
							}
						]
					},
					"parameters": [
						{
							"id": 486,
							"name": "fns",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The predicates to check before executing the decorated function\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "boolean"
										}
									],
									"name": "TFunction"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 487,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 488,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 489,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 490,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 491,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TFunction"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 686,
									"character": 53
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 686,
					"character": 22
				}
			]
		},
		{
			"id": 834,
			"name": "LimitToFrames",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 835,
					"name": "LimitToFrames",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Limit function calls to browser frames.\nUseful for animations.\nEvery subsequent call before the next frame is blocked.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want specific time frames, look at {@link Debounce} or\n{@link Debuffer} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @LimitToFrame()\n  render() {\n    // Only executed on every frame at max\n  }\n```\n\nCall limiting decorators:\n{@link Debounce} {@link Debuffer} {@link LimitToFrames}\n\nDelaying decorators:\n{@link Delay} {@link NextFrame} {@link NextTick} {@link NextMs}\n\nInterval decorators:\n{@link Every} {@link EveryFrame}\n"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 836,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 837,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 838,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 839,
											"name": "propertyKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 840,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AnyFunction"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "TFunction"
											}
										],
										"name": "TypedPropertyDescriptor"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 3016,
									"character": 33
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 3016,
					"character": 30
				}
			]
		},
		{
			"id": 737,
			"name": "NProp",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 738,
					"name": "NProp",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Declares a Vue property.\nNumber flavor of {@link Prop | @Prop} decorator",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThere are various preconfigured flavors of this decorator for different\ntypes already available:\n{@link SProp} {@link NProp} {@link DProp} {@link BProp}\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @NProp()                       private simpleNumber!: number;\n  @NProp({default: null})        private defaultsToNull!: null | number;\n  @NProp({default: Math.random}) private defaultsToRandom!: number;\n  @NProp({model: \"change\"})      private modelValue!: number;\n```\n\n{@link SProp} {@link NProp} {@link DProp} {@link BProp} {@link Prop}"
							}
						]
					},
					"parameters": [
						{
							"id": 739,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The property options to pass to vue, it can either be\n a constructor function like String or Number, an array of constructor\n functions or a property object {@link RecordPropOpts}.\n If a property object is given, in addition to the normal vue options\n some additional values can be provided.\n"
							},
							"type": {
								"type": "reference",
								"id": 727,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "PropOpts"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2007,
					"character": 22
				}
			]
		},
		{
			"id": 841,
			"name": "NextFrame",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 842,
					"name": "NextFrame",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Delay function calls by a single browser frame.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want to delay by one ms, a specific time or a vue tick, look into\n{@link NextMs}, {@link Delay} or {@link NextTick} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @NextFrame(500)\n  delayed() {\n    // Executed on next animation frame\n  }\n```\n\nCall limiting decorators:\n{@link Debounce} {@link Debuffer} {@link LimitToFrames}\n\nDelaying decorators:\n{@link Delay} {@link NextFrame} {@link NextTick} {@link NextMs}\n\nInterval decorators:\n{@link Every} {@link EveryFrame}\n"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 843,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 844,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 845,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 846,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 847,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AnyFunction"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 3044,
									"character": 29
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 3044,
					"character": 26
				}
			]
		},
		{
			"id": 848,
			"name": "NextMs",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 849,
					"name": "NextMs",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Delay function calls by a millisecond.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want to delay by a specific amout of time, a browser frame or a vue tick, look into\n{@link Delay}, {@link NextFrame} or {@link NextTick} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @NextMs\n  delayed() {\n    // Executed 1 ms after invocation\n  }\n```\n\nCall limiting decorators:\n{@link Debounce} {@link Debuffer} {@link LimitToFrames}\n\nDelaying decorators:\n{@link Delay} {@link NextFrame} {@link NextTick} {@link NextMs}\n\nInterval decorators:\n{@link Every} {@link EveryFrame}\n"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 850,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 851,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 852,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 853,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 854,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AnyFunction"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 3072,
									"character": 26
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 3072,
					"character": 23
				}
			]
		},
		{
			"id": 855,
			"name": "NextTick",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 856,
					"name": "NextTick",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Delay function calls by a vue tick using this.$nextTick.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want to delay by one ms, a browser frame or a specific amout of time, look into\n{@link NextMs}, {@link NextFrame} or {@link Delay} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @NextTick\n  delayed() {\n    // Executed on this.$nextTick\n  }\n```\n\nCall limiting decorators:\n{@link Debounce} {@link Debuffer} {@link LimitToFrames}\n\nDelaying decorators:\n{@link Delay} {@link NextFrame} {@link NextTick} {@link NextMs}\n\nInterval decorators:\n{@link Every} {@link EveryFrame}\n"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 857,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 858,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 859,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 860,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 861,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AnyFunction"
													}
												],
												"name": "TypedPropertyDescriptor"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 3100,
									"character": 28
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 3100,
					"character": 25
				}
			]
		},
		{
			"id": 691,
			"name": "On",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 692,
					"name": "On",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Registers the decorated method as a vue event listener.\nif more than one event is given, it will listen for multiple events\nAll event parameters are passed as arguments to the decorated method.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis decorator doesn't work for dom events, only for vue events.\nIf you want to attach to dom events, use {@link OnElement} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @On(\"toggle-fade\")\n  private onToggleFade() {\n    // Called when this.$emit(\"toggle-fade\") is called\n  }\n```\n\n{@Link On} {@Link OnElement} {@Link OnDocument} {@Link OnWindow} {@Link OnParent} {@Link OnParentElement}"
							}
						]
					},
					"parameters": [
						{
							"id": 693,
							"name": "events",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The events to listen for\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1409,
					"character": 19
				}
			]
		},
		{
			"id": 694,
			"name": "OnDocument",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 695,
					"name": "OnDocument",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Registers the decorated method as a dom event listener for the document object.\nif more than one event is given, it will listen for multiple events\nAll event parameters are passed as arguments to the decorated method.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want to attach to window, use {@link OnWindow} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @OnDocument(\"click\")\n  private onToggleFade(ev: MouseEvent) {\n    // Called when document is clicked\n  }\n```\n\n{@Link On} {@Link OnElement} {@Link OnDocument} {@Link OnWindow} {@Link OnParent} {@Link OnParentElement}"
							}
						]
					},
					"parameters": [
						{
							"id": 696,
							"name": "events",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The events to listen for\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1432,
					"character": 27
				}
			]
		},
		{
			"id": 697,
			"name": "OnElement",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 698,
					"name": "OnElement",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Registers the decorated method as a dom event listener.\nif more than one event is given, it will listen for multiple events\nAll event parameters are passed as arguments to the decorated method.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis decorator doesn't work for dom events, only for dom events.\nIf you want to attach to vue events, use {@link On} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @OnElement(\"click\")\n  private onToggleFade(ev: MouseEvent) {\n    // Called when this.$el is clicked\n  }\n```\n\n{@Link On} {@Link OnElement} {@Link OnDocument} {@Link OnWindow} {@Link OnParent} {@Link OnParentElement}"
							}
						]
					},
					"parameters": [
						{
							"id": 699,
							"name": "events",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The events to listen for\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1456,
					"character": 26
				}
			]
		},
		{
			"id": 700,
			"name": "OnParent",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 701,
					"name": "OnParent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Registers the decorated method as a vue event listener of the parent vue component.\nif more than one event is given, it will listen for multiple events\nAll event parameters are passed as arguments to the decorated method.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis decorator doesn't work for dom events, only for vue events.\nIf you want to attach to dom events, use {@link OnParentElement} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @OnParent(\"toggle-fade\")\n  private onToggleFade() {\n    // Called when this.$parent.$emit(\"toggle-fade\") is called\n  }\n```\n\n{@Link On} {@Link OnElement} {@Link OnDocument} {@Link OnWindow} {@Link OnParent} {@Link OnParentElement}"
							}
						]
					},
					"parameters": [
						{
							"id": 702,
							"name": "events",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The events to listen for\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1480,
					"character": 25
				}
			]
		},
		{
			"id": 703,
			"name": "OnParentElement",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 704,
					"name": "OnParentElement",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Registers the decorated method as a dom event listener for the parent vue component.\nif more than one event is given, it will listen for multiple events\nAll event parameters are passed as arguments to the decorated method.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis decorator doesn't work for dom events, only for dom events.\nIf you want to attach to vue events, use {@link OnParent} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @OnParentElement(\"click\")\n  private onToggleFade(ev: MouseEvent) {\n    // Called when this.$parent.$el is clicked\n  }\n```\n\n{@Link On} {@Link OnElement} {@Link OnDocument} {@Link OnWindow} {@Link OnParent} {@Link OnParentElement}"
							}
						]
					},
					"parameters": [
						{
							"id": 705,
							"name": "events",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The events to listen for\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1504,
					"character": 32
				}
			]
		},
		{
			"id": 706,
			"name": "OnWindow",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 707,
					"name": "OnWindow",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Registers the decorated method as a dom event listener for the window object.\nif more than one event is given, it will listen for multiple events\nAll event parameters are passed as arguments to the decorated method.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want to attach to document, use {@link OnDocument} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @OnWindow(\"resize\")\n  private onToggleFade(ev: Event) {\n    // Called when window is resized\n  }\n```\n\n{@Link On} {@Link OnElement} {@Link OnDocument} {@Link OnWindow} {@Link OnParent} {@Link OnParentElement}"
							}
						]
					},
					"parameters": [
						{
							"id": 708,
							"name": "events",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The events to listen for\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1527,
					"character": 25
				}
			]
		},
		{
			"id": 661,
			"name": "ParentEl",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 662,
					"name": "ParentEl",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Creates a computed property for {@link Vue#$el#querySelector | this.$parent.$el.querySelector}\nor {@link Vue#$el#querySelectorAll | this.$parent.$el.querySelectorAll}",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nPreferably use {@link Ref}\n"
							},
							{
								"tag": "example",
								"text": "\n```typescript\n@Component({ template: `<div><div id=\"foo\"></div><foo-bar /></div>` })\nexport class ParentComponent extends Vue {}\n\n@Component({})\nexport class FooBar extends Vue {\n  @ParentEl(\"#foo\") private foo!: HTMLDivElement;\n}\n```\n\n{@link El} {@link DocumentEl} {@link ParentEl}"
							}
						]
					},
					"parameters": [
						{
							"id": 663,
							"name": "selector",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The css selector to pass to\n{@link Vue#$el#querySelector | this.$parent.$el.querySelector} or {@link Vue#$el#querySelectorAll | this.$parent.$el.querySelectorAll}"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 664,
							"name": "multiple",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "If {@link Vue#$el#querySelectorAll | this.$parent.$el.querySelectorAll} should be used\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1186,
					"character": 25
				}
			]
		},
		{
			"id": 729,
			"name": "Prop",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 730,
					"name": "Prop",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Declares a Vue property.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThere are various preconfigured flavors of this decorator for different\ntypes already available:\n{@link SProp} {@link NProp} {@link DProp} {@link BProp}\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @Prop()                    private simpleFlag!: boolean;\n  @Prop(Number)              private simpleNumber!: number;\n  @Prop([String, Number])    private stringOrNumber!: string | number;\n  @Prop({default: null})     private defaultsToNull!: null | string;\n  @Prop({literal: parseInt}) private parser!: (str: string) => number;\n  @Prop({model: \"change\"})   private modelValue!: string;\n```\n\n{@link SProp} {@link NProp} {@link DProp} {@link BProp}"
							}
						]
					},
					"typeParameter": [
						{
							"id": 731,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 732,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The property options to pass to vue, it can either be\n a constructor function like String or Number, an array of constructor\n functions or a property object {@link RecordPropOpts}.\n If a property object is given, in addition to the normal vue options\n some additional values can be provided."
							},
							"type": {
								"type": "reference",
								"id": 727,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								],
								"name": "PropOpts"
							}
						},
						{
							"id": 733,
							"name": "typeOverride",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "an optional type override if no type is specified\n using both provided options or reflected decorator metadata.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								],
								"name": "Constructor"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1928,
					"character": 21
				}
			]
		},
		{
			"id": 746,
			"name": "Ref",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 747,
					"name": "Ref",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Creates an accessor to a Vue reference.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you need access to a dom node inside one of the children of this component\nor one outside of it, you can use {@link El} and its flavours instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```typescript\n@Component({ template: `<div><div ref=\"example\">Hello World</div></div>` })\nclass MyVueComponent extends Vue {\n  @Ref(\"example\") private example!: HTMLDivElement;\n  private someMethod() {\n    const {scrollLeft, clientWidth} = this.example;\n    this.example.scrollTo({ left: scrollLeft + clientWidth * .6, behavior: \"smooth\" });\n  }\n}\n```\n"
							}
						]
					},
					"parameters": [
						{
							"id": 748,
							"name": "ref",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The reference to bind to.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2135,
					"character": 20
				}
			]
		},
		{
			"id": 749,
			"name": "Route",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 750,
					"name": "Route",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Registers a route for a given component\nDecorator for components",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want to use all registered routes, use {@link getRoutes}\nas the value for `routes` of your router.\n\nOnly works if the file is imported before the router is initialized.\nRequires \"vue-router\"\n\nIf you're looking for binding route parameters or queries to memgers\nUse {@link RouteParam} {@link RouteQuery} {@link RouteName}.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n// pages/HelloPage.ts\n@Route(\"/hello\")\n@Component({ template: `<div>Hello World</div>` })\nexport class HelloPage extends Vue {}\n\n// router.ts\nimport \"./pages/HelloPage.ts\"\nimport Vue from \"vue\";\nimport Router from \"vue-router\";\nimport { getRoutes } from \"@propero/vue-extra-decorators\";\nVue.use(Router);\nexport const router = new Router({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes: getRoutes(),\n});\n```\n\n{@link RouteParam} {@link RouteQuery} {@link RouteName}"
							}
						]
					},
					"parameters": [
						{
							"id": 751,
							"name": "route",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "A route string or vue route config\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 364,
												"name": "RouteConfig"
											}
										],
										"name": "Partial"
									}
								]
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 752,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 753,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 754,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 2176,
									"character": 62
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2176,
					"character": 22
				}
			]
		},
		{
			"id": 755,
			"name": "RouteName",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 756,
					"name": "RouteName",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Binds the current route name to a class member.\nDecorator for properties.\nOn setting the decorated property, a navigation will\noccur to the set route name using {@link Router#replace}.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want to bind a route param or query instead, use\n{@link RouteParam} or {@link RouteQuery}\nIf you want to bind a route to a component, use {@link Route}\n\nRequires \"vue-router\"\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n@Route({ name: \"hello\", path: \"/\" })\n@Component({ template: `<div>Hello World</div>` })\nexport class HelloPage extends Vue {\n\n  @RouteName()\n  private routeName!: string; // Should be hello\n\n  private nav() {\n    this.routeName = \"otherView\"; // Navigates to otherView\n  }\n}\n```\n\n{@link RouteParam} {@link RouteQuery} {@link RouteName} {@link Route}"
							}
						]
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2209,
					"character": 26
				}
			]
		},
		{
			"id": 757,
			"name": "RouteParam",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 758,
					"name": "RouteParam",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Binds a route param to a class member.\nDecorator for properties.\nOn setting the decorated property, a navigation will\noccur to the current route with new params using\n{@link Router#replace}.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want to bind a route name or query instead, use\n{@link RouteName} or {@link RouteQuery}\nIf you want to bind a route to a component, use {@link Route}\n\nRequires \"vue-router\"\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n@Route({ name: \"hello\", path: \"/:firstName\" })\n@Component({ template: `<div>Hello {{thename || \"World\"}}</div>` })\nexport class HelloPage extends Vue {\n\n  @RouteParam(\"firstName\")\n  private thename!: string; // Inferred from URL\n\n  private nav() {\n    this.thename = \"Gustav\"; // Navigates to '/Gustav'\n  }\n}\n```\n\n{@link RouteParam} {@link RouteQuery} {@link RouteName} {@link Route}"
							}
						]
					},
					"parameters": [
						{
							"id": 759,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 760,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 169,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "RouteParamOptions"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2281,
					"character": 27
				}
			]
		},
		{
			"id": 761,
			"name": "RouteQuery",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 762,
					"name": "RouteQuery",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Binds a route query to a class member.\nDecorator for properties.\nOn setting the decorated property, a navigation will\noccur to the current route with new query using\n{@link Router#replace}.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf you want to bind a route name or query instead, use\n{@link RouteName} or {@link RouteQuery}\nIf you want to bind a route to a component, use {@link Route}\n\nRequires \"vue-router\"\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n@Route({ name: \"hello\", path: \"/\" })\n@Component({ template: `<div>Hello {{thename || \"World\"}}</div>` })\nexport class HelloPage extends Vue {\n\n  @RouteQuery(\"firstName\")\n  private thename!: string; // Inferred from URL\n\n  private nav() {\n    this.thename = \"Gustav\"; // Navigates to '/?firstName=Gustav'\n  }\n}\n```\n\n{@link RouteParam} {@link RouteQuery} {@link RouteName} {@link Route}"
							}
						]
					},
					"typeParameter": [
						{
							"id": 763,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 764,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 765,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 184,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								],
								"name": "RouteQueryOptions"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2353,
					"character": 27
				}
			]
		},
		{
			"id": 734,
			"name": "SProp",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 735,
					"name": "SProp",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Declares a Vue property.\nString flavor of {@link Prop | @Prop} decorator",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThere are various preconfigured flavors of this decorator for different\ntypes already available:\n{@link SProp} {@link NProp} {@link DProp} {@link BProp}\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @SProp()                      private simpleString!: string;\n  @SProp({default: null})       private defaultsToNull!: null | string;\n  @SProp({default: () => \"hi\"}) private defaultsToHi!: string;\n  @SProp({model: \"change\"})     private modelValue!: string;\n```\n\n{@link SProp} {@link NProp} {@link DProp} {@link BProp} {@link Prop}"
							}
						]
					},
					"parameters": [
						{
							"id": 736,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"text": "The property options to pass to vue, it can either be\n a constructor function like String or Number, an array of constructor\n functions or a property object {@link RecordPropOpts}.\n If a property object is given, in addition to the normal vue options\n some additional values can be provided.\n"
							},
							"type": {
								"type": "reference",
								"id": 727,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "PropOpts"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1955,
					"character": 22
				}
			]
		},
		{
			"id": 783,
			"name": "State",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 784,
					"name": "State",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Creates an observable state for the decorated property.\nEvery decorated property can then be used reactively in a vue context.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis is intended to be used outside of vue contexts in separate classes.\nYou can never set a decorated value to undefined, it will always be set to\nnull for reactivity reasons.\nThis is meant to be used when vuex is too much for what you are trying to\naccomplish but some form of shared state is necessary.\nFor vue components, you should use {@link Data} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```typescript\nexport class MySimpleStore {\n  @State public firstName?: string;\n  @State public lastName = \"foo\";\n  @State({ default: () => new Date() }) public creationDate!: Date;\n  @State({ literal: parseInt }) public parser!: (str: string) => number;\n}\n```\n"
							},
							{
								"tag": "catecory",
								"text": "Decorator\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 785,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 786,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The state options, `default` being the default value or a\nfactory returning it, `literal` being the absolute default value,\nfunctions being passed as is.\n"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 787,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 788,
											"name": "default",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "dist/VueExtraDecorators.d.ts",
													"line": 2711,
													"character": 11
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 789,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 790,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "typeParameter",
																		"name": "T"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "dist/VueExtraDecorators.d.ts",
																	"line": 2711,
																	"character": 17
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 791,
											"name": "literal",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "dist/VueExtraDecorators.d.ts",
													"line": 2712,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 785,
												"name": "T"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												788,
												791
											]
										}
									],
									"sources": [
										{
											"fileName": "dist/VueExtraDecorators.d.ts",
											"line": 2710,
											"character": 37
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "PropertyDecorator"
					}
				},
				{
					"id": 792,
					"name": "State",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 793,
							"name": "proto",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "InstanceType"
							}
						},
						{
							"id": 794,
							"name": "key",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2710,
					"character": 22
				},
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 2740,
					"character": 22
				}
			]
		},
		{
			"id": 709,
			"name": "Watch",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 710,
					"name": "Watch",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Watch a property for changes",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nYou can also pass an options object instead of just a property\nto set it to watch immediately or deeply.\nThere are also flavors for these uses: {@link IWatch}, {@link DWatch}, {@link IDWatch}"
							},
							{
								"tag": "example",
								"text": "\n```typescript\n@Data({ default: \"\" }) private value!: string;\n@Watch(\"value\")\nprivate onValueChange(newValue: string, oldValue: string) {\n  // ...Implementation\n}\n```\n{@link Watch}, {@link IWatch}, {@link DWatch}, {@link IDWatch}"
							}
						]
					},
					"parameters": [
						{
							"id": 711,
							"name": "property",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The property to watch"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				},
				{
					"id": 712,
					"name": "Watch",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 713,
							"name": "opts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 151,
								"name": "WatchOptionsWithProp"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AnyFunction"
							}
						],
						"name": "TypedPropertyDecorator"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1568,
					"character": 22
				},
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 1589,
					"character": 22
				}
			]
		},
		{
			"id": 473,
			"name": "and",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 474,
					"name": "and",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Merges multiple predicates into one.",
						"returns": "A predicate that returns true if all other predicates have returned true.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for {@link If} alike methods.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(and(isInPath(\"drawer\"), not(wasPrevented)))\n  private doSomething(ev: Event) {\n    // only executed if isInPath(\"drawer\") and not(wasPrevented) return true\n  }\n```\n{@link If} {@link IfNot} {@link or} {@link not}"
							}
						]
					},
					"parameters": [
						{
							"id": 475,
							"name": "fns",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The predicates to combine"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "boolean"
										}
									],
									"name": "TFunction"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "TFunction"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 650,
					"character": 20
				}
			]
		},
		{
			"id": 621,
			"name": "composeConverter",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 622,
					"name": "composeConverter",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Creates a key converter function for use in {@link Classes}."
					},
					"parameters": [
						{
							"id": 623,
							"name": "className",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The transformation to apply to the class name"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "TFunction"
							}
						},
						{
							"id": 624,
							"name": "memberName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The transformation to apply to the object key\n\n{@link Classes} {@link ClassesCamel} {@link ClassesKebap} {@link ClassesPascal} {@link ClassesSnake}"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "TFunction"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 625,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 626,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 627,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "tuple",
														"elements": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												]
											}
										},
										{
											"id": 628,
											"name": "member",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 941,
									"character": 115
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 941,
					"character": 33
				}
			]
		},
		{
			"id": 418,
			"name": "isEqual",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 419,
					"name": "isEqual",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Create a predicate that checks if the first parameter\nof the returned function is equal to a given value at\na certain json path.",
						"returns": "A predicate for use in `@If` and `@IfNot`\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for\n{@link If} alike methods.\nIf you want to check against a set of values,\nuse {@link isOneOf} instead.\n\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(isEqual(\"foo.bar\", \"baz\"))\n  private doSomething(foo: any) {\n    // foo.bar is \"baz\"\n  }\n```\n\n{@link If} {@link IfNot} {@link or} {@link and} {@link not}"
							}
						]
					},
					"parameters": [
						{
							"id": 420,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "the path to look up in the returned object."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 421,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "the value to check equality against."
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 422,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 423,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 424,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 365,
									"character": 51
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 365,
					"character": 24
				}
			]
		},
		{
			"id": 432,
			"name": "isFirstChild",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 433,
					"name": "isFirstChild",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A predicate that checks if the first parameter (assumed event)\nis the first child of its parent node.",
						"returns": "true, if the event's target is the first child of its parent.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for\n{@link If} alike methods.\nIf you want to check if a node is the first element child of\nits parent, use {@link isFirstElementChild} instead.\n\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(isFirstChild)\n  private doSomething(ev: Event) {\n    // ev.target is it the first child of its parent\n  }\n```\n\n{@link If} {@link IfNot} {@link or} {@link and} {@link not}\n{@link isFirstElementChild} {@link isLastChild} {@link isLastElementChild}"
							}
						]
					},
					"parameters": [
						{
							"id": 434,
							"name": "ev",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The event to check against"
							},
							"type": {
								"type": "reference",
								"name": "Event"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 421,
					"character": 29
				}
			]
		},
		{
			"id": 435,
			"name": "isFirstElementChild",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 436,
					"name": "isFirstElementChild",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A predicate that checks if the first parameter (assumed event)\nis the first child element of its parent element.",
						"returns": "true, if the event's target is the first child of its parent.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for\n{@link If} alike methods.\nIf you want to check if a node is the first child node of\nits parent, use {@link isFirstChild} instead.\n\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(isFirstElementChild)\n  private doSomething(ev: Event) {\n    // ev.target is it the first child of its parent\n  }\n```\n\n{@link If} {@link IfNot} {@link or} {@link and} {@link not}\n{@link isFirstChild} {@link isLastChild} {@link isLastElementChild}"
							}
						]
					},
					"parameters": [
						{
							"id": 437,
							"name": "ev",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The event to check against"
							},
							"type": {
								"type": "reference",
								"name": "Event"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 449,
					"character": 36
				}
			]
		},
		{
			"id": 459,
			"name": "isInPath",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 460,
					"name": "isInPath",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Creates a predicate that checks if its first parameter (assumed event) has\none or more given vue refs in its {@link Event#composedPath | composedPath}.",
						"returns": "A predicate that returns true if all refs are part of the events composedPath.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for {@link If} alike methods.\nIf you want to check if one of many matches use {@link isOneInPath} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(isInPath(\"drawer\"))\n  private doSomething(ev: Event) {\n    // this.$refs[\"drawer\"](.$el) is a member of ev.composedPath()\n  }\n```\n\n{@link If} {@link IfNot} {@link or} {@link and} {@link not}\n{@link isOneInPath}"
							}
						]
					},
					"parameters": [
						{
							"id": 461,
							"name": "refs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The vue refs to check against"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 462,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 463,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 464,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 111,
												"name": "Vue"
											}
										},
										{
											"id": 465,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Event"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 605,
									"character": 45
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 605,
					"character": 25
				}
			]
		},
		{
			"id": 438,
			"name": "isLastChild",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 439,
					"name": "isLastChild",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A predicate that checks if the first parameter (assumed event)\nis the last child of its parent node.",
						"returns": "true, if the event's target is the last child of its parent.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for\n{@link If} alike methods.\nIf you want to check if a node is the last element child of\nits parent, use {@link isLastElementChild} instead.\n\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(isLastChild)\n  private doSomething(ev: Event) {\n    // ev.target is it the last child of its parent\n  }\n```\n\n{@link If} {@link IfNot} {@link or} {@link and} {@link not}\n{@link isFirstElementChild} {@link isFirstChild} {@link isLastElementChild}"
							}
						]
					},
					"parameters": [
						{
							"id": 440,
							"name": "ev",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The event to check against"
							},
							"type": {
								"type": "reference",
								"name": "Event"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 477,
					"character": 28
				}
			]
		},
		{
			"id": 441,
			"name": "isLastElementChild",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 442,
					"name": "isLastElementChild",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A predicate that checks if the first parameter (assumed event)\nis the last child element of its parent element.",
						"returns": "true, if the event's target is the last child of its parent.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for\n{@link If} alike methods.\nIf you want to check if a node is the last child node of\nits parent, use {@link isLastChild} instead.\n\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(isLastElementChild)\n  private doSomething(ev: Event) {\n    // ev.target is it the last child of its parent\n  }\n```\n\n{@link If} {@link IfNot} {@link or} {@link and} {@link not}\n{@link isFirstChild} {@link isLastChild} {@link isFirstElementChild}"
							}
						]
					},
					"parameters": [
						{
							"id": 443,
							"name": "ev",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The event to check against"
							},
							"type": {
								"type": "reference",
								"name": "Event"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 505,
					"character": 35
				}
			]
		},
		{
			"id": 466,
			"name": "isOneInPath",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 467,
					"name": "isOneInPath",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Creates a predicate that checks if its first parameter (assumed event) has\none or more given vue refs in its {@link Event#composedPath | composedPath}.",
						"returns": "A predicate that returns true if one of all refs are part of the events composedPath.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for {@link If} alike methods.\nIf you want to check if all match use {@link isInPath} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(isOneInPath(\"drawer\", \"navbar\"))\n  private doSomething(ev: Event) {\n    // this.$refs[\"drawer\"](.$el) or this.$refs[\"navbar\"](.$el) is a member of ev.composedPath()\n  }\n```\n\n{@link If} {@link IfNot} {@link or} {@link and} {@link not}\n{@link isInPath}"
							}
						]
					},
					"parameters": [
						{
							"id": 468,
							"name": "refs",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The vue refs to check against"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 469,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 470,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 471,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 111,
												"name": "Vue"
											}
										},
										{
											"id": 472,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Event"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 630,
									"character": 48
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 630,
					"character": 28
				}
			]
		},
		{
			"id": 425,
			"name": "isOneOf",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 426,
					"name": "isOneOf",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Create a predicate that checks if the first parameter\nof the returned function is equal to one of many a given\nvalues at a certain json path.",
						"returns": "A predicate for use in `@If` and `@IfNot`\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for\n{@link If} alike methods.\nIf you only want to check against a single value,\nuse {@link isEqual} instead.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(isOneOf(\"foo.bar\", \"baz\", \"qux\"))\n  private doSomething(foo: any) {\n    // foo.bar is either \"baz\" or \"qux\"\n  }\n```\n\n{@link If} {@link IfNot} {@link or} {@link and} {@link not}"
							}
						]
					},
					"parameters": [
						{
							"id": 427,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "the path to look up in the returned object."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 428,
							"name": "values",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "the value to check equality against."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 429,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 430,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 431,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 393,
									"character": 57
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 393,
					"character": 24
				}
			]
		},
		{
			"id": 923,
			"name": "isPromiseLike",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 924,
					"name": "isPromiseLike",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 925,
							"name": "it",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "it",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "Promise"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 3246,
					"character": 30
				}
			]
		},
		{
			"id": 920,
			"name": "isThenable",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 921,
					"name": "isThenable",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 922,
							"name": "it",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "it",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "PromiseLike"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 3245,
					"character": 27
				}
			]
		},
		{
			"id": 444,
			"name": "keyMatches",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 445,
					"name": "keyMatches",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Creates a predicate that checks if the first parameter (assumed event)\nis a key event matching one of a given set of keys.",
						"returns": "A predicate that returns true, if the event key is one of the given keys.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for\n{@link If} alike methods.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(keyMatches(\"Enter\", \"ArrowUp\", \"A\"))\n  private doSomething(ev: KeyboardEvent) {\n    // ev.key is either \"Enter\", \"ArrowUp\" or \"A\"\n  }\n```\n\n{@link If} {@link IfNot} {@link or} {@link and} {@link not}\n{@link mouseButtonMatches} {@link wasPrevented}"
							}
						]
					},
					"parameters": [
						{
							"id": 446,
							"name": "keys",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The keys to check against"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 447,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 448,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 449,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "KeyboardEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 530,
									"character": 47
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 530,
					"character": 27
				}
			]
		},
		{
			"id": 450,
			"name": "mouseButtonMatches",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 451,
					"name": "mouseButtonMatches",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Creates a predicate that checks if the first parameter (assumed event)\nis a key event matching one of a given set of mouse buttons.",
						"returns": "A predicate that returns true, if the event button is one of the given mouse buttons.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for\n{@link If} alike methods.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(mouseButtonMatches(\"LEFT\", \"MIDDLE\"))\n  private doSomething(ev: MouseEvent) {\n    // ev is either left or middle click (or both!)\n  }\n```\n\n{@link If} {@link IfNot} {@link or} {@link and} {@link not}\n{@link keyMatches} {@link wasPrevented}"
							}
						]
					},
					"parameters": [
						{
							"id": 452,
							"name": "buttons",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The mouse buttons to check against"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "MouseButton"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 453,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 454,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 455,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "MouseEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "dist/VueExtraDecorators.d.ts",
									"line": 555,
									"character": 63
								}
							]
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 555,
					"character": 35
				}
			]
		},
		{
			"id": 492,
			"name": "not",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 493,
					"name": "not",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Inverts a given predicate (negates its output)",
						"returns": "The negated predicate.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for {@link If} alike methods.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(not(wasPrevented))\n  private doSomething(ev: Event) {\n    // wasPrevented returns false\n  }\n```\n{@link If} {@link IfNot} {@link or} {@link and}"
							}
						]
					},
					"parameters": [
						{
							"id": 494,
							"name": "fn",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The predicate to invert"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "TFunction"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "TFunction"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 706,
					"character": 20
				}
			]
		},
		{
			"id": 495,
			"name": "or",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 496,
					"name": "or",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Merges multiple predicates into one.",
						"returns": "A predicate that returns true if one of the given predicates returns true.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for {@link If} alike methods.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @If(or(isInPath(\"drawer\"), not(wasPrevented)))\n  private doSomething(ev: Event) {\n    // only executed if isInPath(\"drawer\") or not(wasPrevented) return true\n  }\n```\n{@link If} {@link IfNot} {@link and} {@link not}"
							}
						]
					},
					"parameters": [
						{
							"id": 497,
							"name": "fns",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isRest": true
							},
							"comment": {
								"text": "The predicates to combine"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "boolean"
										}
									],
									"name": "TFunction"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "TFunction"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 726,
					"character": 19
				}
			]
		},
		{
			"id": 947,
			"name": "statusOf",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 948,
					"name": "statusOf",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 949,
							"name": "obj",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 3287,
					"character": 25
				}
			]
		},
		{
			"id": 456,
			"name": "wasPrevented",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isPublic": true,
				"isExported": true
			},
			"signatures": [
				{
					"id": 457,
					"name": "wasPrevented",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isPublic": true,
						"isExported": true
					},
					"comment": {
						"shortText": "A predicate that checks if the first parameter (assumed event)\nwas prevented with {@link Event#preventDefault | preventDefault}.",
						"returns": "true, if event was prevented before.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis function is meant to be a condition for\n{@link If} alike methods.\n"
							},
							{
								"tag": "example",
								"text": "\n```TS\n  @IfNot(wasPrevented)\n  private doSomething(ev: Event) {\n    // ev was not prevented!\n  }\n```\n\n{@link If} {@link IfNot} {@link or} {@link and} {@link not}\n{@link keyMatches} {@link mouseButtonMatches}"
							}
						]
					},
					"parameters": [
						{
							"id": 458,
							"name": "ev",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The event to check against"
							},
							"type": {
								"type": "reference",
								"name": "Event"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "dist/VueExtraDecorators.d.ts",
					"line": 580,
					"character": 29
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				1
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				112,
				155,
				160,
				169,
				184,
				199,
				151
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				535,
				526,
				507,
				727,
				516,
				364,
				884,
				582
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				387,
				887
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				740,
				766,
				775,
				610,
				629,
				633,
				637,
				641,
				743,
				717,
				723,
				803,
				795,
				811,
				653,
				657,
				665,
				673,
				682,
				819,
				827,
				720,
				714,
				476,
				484,
				834,
				737,
				841,
				848,
				855,
				691,
				694,
				697,
				700,
				703,
				706,
				661,
				729,
				746,
				749,
				755,
				757,
				761,
				734,
				783,
				709,
				473,
				621,
				418,
				432,
				435,
				459,
				438,
				441,
				466,
				425,
				923,
				920,
				444,
				450,
				492,
				495,
				947,
				456
			],
			"categories": [
				{
					"title": "Decorator",
					"children": [
						740,
						766,
						775,
						610,
						629,
						633,
						637,
						641,
						743,
						717,
						723,
						803,
						795,
						811,
						653,
						657,
						665,
						673,
						682,
						819,
						827,
						720,
						714,
						476,
						484,
						834,
						737,
						841,
						848,
						855,
						691,
						694,
						697,
						700,
						703,
						706,
						661,
						729,
						746,
						749,
						755,
						757,
						761,
						734,
						709
					]
				},
				{
					"title": "Other",
					"children": [
						783,
						621,
						923,
						920,
						947
					]
				},
				{
					"title": "Predicate",
					"children": [
						473,
						418,
						432,
						435,
						459,
						438,
						441,
						466,
						425,
						444,
						450,
						492,
						495,
						456
					]
				}
			]
		}
	]
}